name: Integration

on:
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.9.0
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

  code-checks:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.9.0
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Linter
        run: pnpm lint:check

      - name: Format
        run: pnpm format:check

  chromium-tests:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      # - name: Setup docker environment
        # run: docker-compose up -d

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.9.0
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: Get installed playwright version
        id: playwright-version
        run: |
          echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package.json').devDependencies['@playwright/test'])")" >> $GITHUB_ENV

      - name: Cache playwright browsers binaries
        uses: actions/cache@v3
        id: playwright-cache
        with: 
          path: |
            ~/.cache/ms-playwright/chromium-*
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}-chromium

      - name: Install Playwright browser
        run: pnpx playwright install --with-deps chromium
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      
      - name: Install dependencies
        run: pnpm install

      - name: Run tests
        run: 
          pnpm test:run-chromium
  
  firefox-tests:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      # - name: Setup docker environment
        # run: docker-compose up -d

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.9.0
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Get installed playwright version
        id: playwright-version
        run: |
          echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package.json').devDependencies['@playwright/test'])")" >> $GITHUB_ENV

      - name: Cache playwright browsers binaries
        uses: actions/cache@v3
        id: playwright-cache
        with: 
          path: |
            ~/.cache/ms-playwright/firefox-*
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}-firefox

      - name: Install Playwright browser
        run: pnpx playwright install --with-deps firefox
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Run tests
        run: 
          pnpm test:run-firefox